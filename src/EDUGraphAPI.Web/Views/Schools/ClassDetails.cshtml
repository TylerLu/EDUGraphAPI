@*
    *   * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
    *   * See LICENSE in the project root for license information.
*@
@model SectionDetailsViewModel
@{
    ViewBag.Title = "Class Details";
    var teachersList = Model.Class.Teachers.ToList();
}
@Styles.Render("~/Content/classdetail")

<div class="row schools class-details">
    <div class="tophero">
        <div class="container">
            <div class="col-md-6 secondnav">
                <a href="/schools"> All Schools</a>
                > @Html.ActionLink(Model.School.Name, "Classes", null, new { schoolId = Model.School.Id }, null)
                > @Model.Class.DisplayName
            </div>
        </div>
        <div class="container">
            <div class="a-heading ">@ViewBag.Title</div>
            <div class="b-title">@Model.Class.ClassCode | @Model.Class.DisplayName</div>
        </div>
        <div class="container coursedetail">
            <div class="col-md-6">
                @*<span>Period:</span> @Model.Class.Period
                <br />*@
                <span>Term Name:</span> @(string.IsNullOrEmpty(Model.Class.Term.DisplayName)?"":Model.Class.Term.DisplayName)
                <br />
                <span>Start/Finish Date:</span>
                @(Model.Class?.Term?.StartDate.ToString("MMMM dd yyyy") ?? "")
                - 
                @(Model.Class?.Term?.EndDate.ToString("MMMM dd yyyy") ?? "")
            </div>
            <div class="col-md-6">
                <span>Teacher:</span>
                @for (var i = 0; i < teachersList.Count(); i++)
                {
                    var name = teachersList[i].DisplayName;
                    if (i < teachersList.Count() - 1)
                    {
                        name = name + ", ";
                    }
                    <span class="coteacher-name">@name</span>
                }
                @if (!Model.IsStudent)
                {
                    <a id="addateacher" href="javascript:void(0)">Add a teacher</a>
                }
            </div>

            @if (!Model.IsStudent)
            {
                <div class="schoolteachers">
                    <div class="close"><img src="/Images/close.png"></div>
                    <div class="title">Select a teacher</div>
                    <div class="list">
                        @if (Model.SchoolTeachers ==null || Model.SchoolTeachers.Count() == 0)
                        {
                            <div > There is no data available at this time.</div>
                        }
                        else
                        {
                            <ul>
                                @foreach (var teacher in Model.SchoolTeachers)
                                {
                                    <li>
                                        <a href="@Url.Action("AddCoTeacher", new { schoolId = Model.School.Id, sectionId = Model.Class.Id, userId = teacher.Id })">
                                            <img src="/images/header-default.jpg" realheader="@Url.Action("UserPhoto", "Photo", new { id = teacher.Id })" /> @teacher.DisplayName
                                        </a>
                                    </li>
                                }
                            </ul>                        
                        }

                    </div>
                </div>
            }
        </div>
        <div style="clear:both;"></div>
    </div>
    <div class="students">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#students"><span>Students</span></a></li>
            <li><a data-toggle="tab" href="#assignments" id="assignmentslink"><span>Assignments</span></a></li>
            <li><a data-toggle="tab" href="#documents" id="classdoclink"><span>Class Documents</span></a></li>
            <li><a data-toggle="tab" href="#conversations"><span>Conversations</span></a></li>
            <li><a data-toggle="tab" href="#seatingchart"><span>SEATING CHART</span></a></li>
        </ul>
        <div class="tab-content">
            <div id="students" class="tab-pane fade in active">
                @if (Model.Class?.Students == null || !Model.Class.Students.Any())
                {
                    <div class="nodata"> There is no data available for this page at this time.</div>
                }
                else
                {
                    <table class="table  table-green table-student tablesorter" id="studentsTable">
                        <thead>
                            <tr class="table-green-header">
                                <th class="tdleft">student name</th>
                                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stu in Model.Class.Students)
                            {
                                <tr class="tr-content">
                                    <td><img src="/images/header-default.jpg" realheader="@Url.Action("UserPhoto", "Photo", new { id = stu.Id })" /> @stu.DisplayName </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <div id="assignments" class="tab-pane fade">
                @if (!Model.IsStudent)
                {
                  <div class="addassignment"><a href="javascript:void(0)"> + New</a></div>
                }
                <div id="assignmentslist">
                @if (Model.Assignments == null ||  Model.Assignments.Count() == 0)
                {
                    <div class="nodata"> There is no data available for this page at this time.</div>
                }
                else
                {
                    <table class="table  table-green table-student ">
                        <thead>
                            <tr class="table-green-header">
                                <th class="header">Name</th>
                                <th class="header">Due Date</th>
                                <th class="header">Status</th>
                                <th class="header">Details</th>
                            </tr>
                        </thead>
                        <tbody>
                           @foreach (var assignment in Model.Assignments)
                           {
                            <tr class="tr-content">
                                <td>@assignment.DisplayName</td>
                                <td>@(string.IsNullOrEmpty(assignment.DueDateTime) ? "": Convert.ToDateTime(assignment.DueDateTime).ToString("M/dd/yyyy"))</td>
                                <td>@assignment.Status</td>
                                <td>

                                <a class="detaillink" 
                                   data-status="@assignment.Status" 
                                   data-id="@assignment.Id" 
                                   data-dueDate="@assignment.DueDateTime" 
                                   data-title="@assignment.DisplayName" 
                                   data-allowlate="@Convert.ToString(assignment.AllowLateSubmissions)" 
                                   href="javascript:void(0)">Details</a>
                                @if (!Model.IsStudent && assignment.Status != "draft")
                                {
                                    <span>|</span>
                                    <a href="javascript:void(0)" class="submissionslink"  data-status="@assignment.Status" data-id="@assignment.Id" data-dueDate="@(string.IsNullOrEmpty(assignment.DueDateTime) ? "": Convert.ToDateTime(assignment.DueDateTime).ToString("M/dd/yyyy"))" data-title="@assignment.DisplayName" > Submissions</a>
                                }
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                    
                    }
                </div>
                <div class="modal fade"id="new-assignment" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="alert alert-danger assignment-alert">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <span></span>
                            </div>

                            <div class="modal-body">
                                @using (Html.BeginForm("NewAssignment", "Schools", FormMethod.Post, new { enctype = "multipart/form-data", id = "new-assignment-form" }))
                                {
                                    @Html.ValidationSummary("", new { @class = "text-danger" })
                                    <input id="FilesToBeUploaded" name="FilesToBeUploaded" type="hidden" value="">
                                    <input id="classId" name="classId" type="hidden" value="@Model.Class.Id" />
                                    <input id="status" name="status" type="hidden" />
                                    <input type="hidden" name="schoolId" id="schoolId" value="@Model.School.Id" />

                                    <fieldset>
                                        <label>Name</label>
                                        <input type="text" name="name" id="name" value="" class="text ui-widget-content ui-corner-all">
                                        <br />
                                        <label>Due Date</label>
                                        <input type="text" id="duedate" name="duedate" value="" class="text ui-widget-content ui-corner-all">
                                        <select class="ui-widget-content ui-corner-all" id="duetime" name="duetime">
                                            <option>12:00 AM</option>
                                            <option>12:30 AM</option>
                                            <option>1:00 AM</option>
                                            <option>1:30 AM</option>
                                            <option>2:00 AM</option>
                                            <option>2:30 AM</option>
                                            <option>3:00 AM</option>
                                            <option>3:30 AM</option>
                                            <option>4:00 AM</option>
                                            <option>4:30 AM</option>
                                            <option>5:00 AM</option>
                                            <option>5:30 AM</option>
                                            <option>6:00 AM</option>
                                            <option>6:30 AM</option>
                                            <option>7:00 AM</option>
                                            <option>7:30 AM</option>
                                            <option>8:00 AM</option>
                                            <option>8:30 AM</option>
                                            <option>9:00 AM</option>
                                            <option>9:30 AM</option>
                                            <option>10:00 AM</option>
                                            <option>10:30 AM</option>
                                            <option>11:00 AM</option>
                                            <option>11:30 AM</option>
                                            <option>12:00 PM</option>
                                            <option>12:30 PM</option>
                                            <option>1:00 PM</option>
                                            <option>1:30 PM</option>
                                            <option>2:00 PM</option>
                                            <option>2:30 PM</option>
                                            <option>3:00 PM</option>
                                            <option>3:30 PM</option>
                                            <option>4:00 PM</option>
                                            <option>4:30 PM</option>
                                            <option>5:00 PM</option>
                                            <option>5:30 PM</option>
                                            <option>6:00 PM</option>
                                            <option>6:30 PM</option>
                                            <option>7:00 PM</option>
                                            <option>7:30 PM</option>
                                            <option>8:00 PM</option>
                                            <option>8:30 PM</option>
                                            <option>9:00 PM</option>
                                            <option>9:30 PM</option>
                                            <option>10:00 PM</option>
                                            <option>10:30 PM</option>
                                            <option>11:00 PM</option>
                                            <option>11:30 PM</option>
                                            <option>11:59 PM</option>
                                        </select>
                                        <br />
                                        <div class="uploadcontainer">
                                            <label>Resources</label>
                                            <div id="uploaders">
                                                <input type="file" id="fileToUpload" name="fileUpload" />
                                            </div>
                                        </div>
                                        <br />
                                        <span id="spnFile" style="color: #FF0000"></span>
                                        <div class="control-section" style="padding: 0px;">
                                            <div id="selectedFiles"></div>
                                        </div>
                                    </fieldset>
                                }
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary btn-cancel" data-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary btn-save">Save As Draft</button>
                                <button type="button" class="btn btn-primary btn-publish">Assign</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade assignment-detail-modal" id="assignment-detail-form" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="alert alert-danger assignment-alert">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <span></span>
                            </div>
                            @if (!Model.IsStudent)
                            {
                                using (Html.BeginForm("UpdateAssignment", "Schools", FormMethod.Post, new { enctype = "multipart/form-data", id = "assignment-detail-form-teacher" }))
                                {
                                    <input name="schoolId" type="hidden" value="@Model.School.Id" />
                                    <input name="classId" type="hidden" value="@Model.Class.Id" />
                                    <input name="assignmentId" type="hidden" />
                                    <input name="assignmentStatus" type="hidden" />

                                    <div class="modal-body">
                                        <div><h5 class="assignment-title"></h5></div>
                                        <div><h5 class="due-date"></h5></div>
                                        
                                        <div class="row resource-upload">
                                            <h5 class="resources-title col-md-8"></h5>
                                            <button type="button" class="btn btn-primary btn-new">+ New</button>
                                            <input type="file" id="newResourceFileCtrl" name="newResource" class="hidden">
                                        </div>
                                        <ul class="resource-list"></ul>
                                    </div>
                                }
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary btn-cancel" data-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary btn-save">Save</button>
                                    <button type="button" class="btn btn-primary btn-publish">Assign</button>
                                    <button type="button" class="btn btn-primary btn-update">Update</button>
                                </div>
                            }
                            else
                            {
                                using (Html.BeginForm("NewAssignmentSubmissionResource", "Schools", FormMethod.Post, new { enctype = "multipart/form-data", id = "assignment-detail-form-student" }))
                                {
                                    <input name="schoolId" type="hidden" value="@Model.School.Id" />
                                    <input name="classId" type="hidden" value="@Model.Class.Id" />
                                    <input name="assignmentId" type="hidden" />
                                    <input name="submissionId" type="hidden" />

                                    <div class="modal-body">
                                        <div><h5 class="assignment-title"></h5></div>
                                        <div><h5 class="due-date"></h5></div>
                                        <div><h5 class="allow-late"></h5></div>
                                        <div class="row">
                                            <h5 class="resources-title col-md-8"></h5>
                                        </div>
                                        <ul class="resource-list"></ul>
                                        <div class="row resource-upload">
                                            <h5 class="handin-title col-md-8"></h5>
                                            <button type="button" class="btn btn-primary btn-upload">Upload</button>
                                            <input type="file" id="newResourceFileCtrl" name="newResource" class="hidden">
                                        </div>
                                        <ul class="handin-list"></ul>
                                    </div>
                                }
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary btn-cancel" data-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary btn-submit">Submit</button>
                                </div>
                           }
                        </div>
                   </div>
                </div>
                <div class="modal fade assignment-detail-modal" id="assignment-submissions-form" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-body">
                                <div><h3>Assignment Submissions</h3></div>
                                <div><h5 class="assignment-title"></h5></div>
                                <div><h5 class="due-date"></h5></div>
                                <div class="row">
                                    <table class="table resource-list" id="assignment-submissions-table">
                                        <thead>
                                            <tr>
                                                <th>Submitted by</th>
                                                <th>Submitted On</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary btn-update" data-dismiss="modal">Return to Assignments</button>

                            </div>
                        </div>
                    </div>
                </div>
         
             </div>
            <div id="documents" class="tab-pane fade">
                @if (Model.DriveItems == null || !Model.DriveItems.Any())
                {
                    <div class="nodata"> There is no data available for this page at this time.</div>
                }
                else
                {
                    <table id="studoc" class="table  table-green table-student tablesorter">
                        <thead>
                            <tr class="table-green-header">
                                <th class="border-holder"></th>
                                <th class="space-holder left"></th>
                                <th class="tdleft">document name</th>
                                <th class="tdleft">modified</th>
                                <th class="tdleft">modified by</th>
                                <th class="space-holder right"></th>
                            </tr>
                            <tr class="blanktr">
                                <th colspan="5"></th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var doc in Model.DriveItems)
                            {
                                <tr class="tr-content">
                                    <td class="border-holder"></td>
                                    <td class="space-holder left"></td>
                                    <td>
                                        <a target="_blank" href="@doc.WebUrl">@doc.Name</a>
                                    </td>
                                    <td>@(@doc.LastModifiedDateTime?.ToString("yyyy-MM-ddTHH:mm:sszzz") ?? "")</td>
                                    <td>@doc.LastModifiedBy.User.DisplayName</td>
                                    <td class="space-holder right"></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                <span class="see-more"><a href="@Model.SeeMoreFilesUrl" target="_blank">See More</a></span>
                <br style="clear:both" />
            </div>
            <div id="conversations" class="tab-pane fade">
                @if (Model.Conversations == null || !Model.Conversations.Any())
                {
                    <div class="nodata"> There is no data available for this page at this time.</div>
                }
                else
                {
                    <table id="stuconv" class="table  table-green table-student">
                        <tbody>
                            @foreach (var con in Model.Conversations)
                            {
                                var url = string.Format("{0}&ConvID={1}",
                                    Model.SeeMoreConversationsUrl,
                                    Uri.EscapeDataString(con.Id).Replace("_", "%2B").Replace("-", "%2f"));
                                <tr class="tr-content">
                                    <td class="border-holder"></td>
                                    <td class="space-holder left"></td>
                                    <td>
                                        <a target="_blank" href="@Html.Raw(url)">@con.Topic</a>
                                    </td>
                                    <td class="space-holder right"></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                <span class="see-more"><a target="_blank" href="@Model.SeeMoreConversationsUrl">See More</a></span>
                <br style="clear:both" />
            </div>

            <div id="seatingchart" class="tab-pane fade ">
                <div class="left" id="dvleft">
                    @if (!Model.IsStudent)
                    {
                        <div class="tip"> To assign seats for each student, drag and drop student profile icons below onto the seating map to the right.</div>
                    }
                    else
                    {
                        var style = $"background-color:{Model.MyFavoriteColor}";
                        <div class="assignseat tip"><div class="greenicon" style="@style"></div>Your assigned seat </div>
                    }
                    <ul id="lstproducts">
                        @foreach (var stu in Model.Class.Students)
                        {
                            var hide = stu.Position == 0 ? "hideitem" : "";
                            <li id="@stu.Id"><img src="/images/header-default.jpg" realheader="@Url.Action("UserPhoto", "Photo", new { id = stu.Id })" /> <span class="disname"> @stu.DisplayName </span> <span class="seated @hide">seated ✓</span> </li>
                        }
                    </ul>
                    <div id="hidtiles" class="hideitem">
                        @foreach (var stu in Model.Class.Students)
                        {
                            var containerClass = "unsaved";
                            var style = string.Format("background-color:{0}", stu.FavoriteColor);
                            if (stu.Position != 0)
                            {
                                containerClass = "white";
                                if (Model.O365UserId == stu.Id)
                                {
                                    containerClass = "green";

                                }
                            }
                            <div class="deskcontainer @containerClass" style="@style" position="@stu.Position" userid="@stu.Id">
                                <div class="deskclose"><img src="/Images/close.png"></div>
                                <div class="deskicon">
                                    <img src="/images/header-default.jpg" realheader="@Url.Action("UserPhoto", "Photo", new { id = stu.Id })" />
                                </div>
                                <div class="stuname">@stu.DisplayName</div>
                            </div>
                        }
                    </div>
                </div>
                <div class="right" id="dvright">
                    @{
                        string color = "";
                        if (!Model.IsStudent)
                        {
                            color = "background-color:" + Model.MyFavoriteColor;
                        }
                    }
                    <div class="teacherdesk" style="@color">Teacher's desk</div>
                    <div>
                        <div id="graybg">
                            @for (var i = 1; i <= 36; i++)
                            {
                                <div class="desktile" position="@i"></div>
                            }
                        </div>
                    </div>
                </div>
                <div id="dvedit" class="dvedit">
                    @if (!Model.IsStudent)
                    {
                        <img id="imgedit" src="~/Images/edit.png" />
                        <img id="imgsave" src="~/Images/save.png" />
                        <img id="imgcancel" src="~/Images/cancel.png" />
                    }
                </div>
                <br style="clear:both" />
            </div>
        </div>
    </div>
</div>

<input type="hidden" name="hidSectionid" id="hidSectionid" value="@Model.Class.Id" />
<input type="hidden" name="hideIsStudent" id="hideIsStudent" value="@Convert.ToString(Model.IsStudent)" />

@*<div id="saveResult"><div>Seating map changes saved.</div></div>*@
@Scripts.Render("~/bundles/classdetail")